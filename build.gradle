plugins { id "com.jfrog.bintray" version "1.7.3" }

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'com.bulenkov'
version '2018.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

repositories {
  mavenCentral()
  flatDir { dirs 'libs' }
}

sourceSets {
  main.java.srcDirs = ['src']
  main.resources.srcDirs = ['res']
  test.java.srcDirs = ['test']
}

configurations { library }

jar { from { configurations.library.collect { it.isDirectory() ? it : zipTree(it) } } }

bintray {
	user = "ice1000"
	key = findProperty("key").toString()
	configurations = ["archives"]
	pkg {
		name = project.name
		repo = "ice1000"
		githubRepo = "ice1k/darcula"
		publicDownloadNumbers = true
		vcsUrl = "https://github.com/ice1k/darcula.git"
		version {
			name = project.version
			vcsTag = "v$project.version"
			websiteUrl = "https://github.com/ice1k/darcula/releases/tag/$vcsTag"
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication.class) {
			from components.java
			groupId = group
			artifactId = project.name
			version = project.version
			artifact sourcesJar
			pom.withXml {
				def root = asNode()
				root.appendNode("description", "A darcula laf available on maven repositories")
				root.appendNode("name", project.name)
				root.children().last()
			}
		}
	}
}

dependencies {
  library name: 'iconloader'
  library name: 'forms-rt-minimized'
  configurations.compile.extendsFrom configurations.library
  compile group: 'org.jetbrains', name: 'annotations', version: '16.0.1'
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
	archives jar
	archives sourcesJar
  archives javadocJar
}

